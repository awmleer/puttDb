///<reference path="../node_modules/@types/node/index.d.ts"/>import express from 'express';import {BehaviorSubject} from "rxjs/index";import {DbManager} from "./db-manager";import * as SocketIO from "socket.io";import * as http from 'http';let app = express();const httpServer = new http.Server(app);const io = SocketIO(httpServer);const jsondiffpatch = require('jsondiffpatch').create();const HOST = '0.0.0.0';const PORT = 3000;let documentSubjects = {};let dbManager = new DbManager();io.on('connection', function(socket){  console.log('a user connected');  let subscriptions = [];  socket.on('disconnect', function(){    console.log('user disconnected');    for(let subscription of subscriptions){      subscription.unsubscribe();    }  });  socket.on('subscribe', async (data, callback) => {    let documentId = data.id;    let subject = documentSubjects[documentId];    if(!subject){      let doc = await dbManager.findOneById(documentId);      subject = new BehaviorSubject<Object>(doc);    }    let subscription = subject.subscribe({      next: (v) => {        // socket.emit();        // TODO notify the client      }    });    subscriptions.push(subscription);    console.log(data);    BehaviorSubject.create();    callback(subject.value);  });});app.get('/', function (req, res) {  res.send('Hello World!');});httpServer.listen(PORT, HOST, function () {  console.log('Example app listening on port 3000!');});