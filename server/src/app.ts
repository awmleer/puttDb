import express from 'express';let app = express();const httpServer = require('http').Server(app);const net = require('net');const io = require('socket.io')(httpServer);const jsondiffpatch = require('jsondiffpatch').create();const HOST = '0.0.0.0';const PORT = 3000;import {BehaviorSubject} from "rxjs/index";let documentSubjects = {};io.on('connection', function(socket){  console.log('a user connected');  socket.on('disconnect', function(){    console.log('user disconnected');  });  subject.next(1);  subject.next(2);  subject.subscribe({    next: (v) => console.log('observerB: ' + v)  });  socket.on('subscribe', (data, callback) => {    let documentId = data.id;    let subject = documentSubjects[documentId];    if(!subject){      collection.find(mongodb.ObjectID(documentId)).toArray((err, docs) => {        console.log(docs);        documentId      });      subject = new BehaviorSubject();      callback(docs[0]);    }    let subscription = subject.subscribe({      next: (v) => console.log('observerA: ' + v)    });    console.log(data);    BehaviorSubject.create();  });});app.get('/', function (req, res) {  res.send('Hello World!');});httpServer.listen(PORT, HOST, function () {  console.log('Example app listening on port 3000!');});